#!/bin/bash
#
# This script is run whenever `vagrant up` is used to power on
# the virtual machine. To customize this behavior, include a file
# in your local VVV/config/homebin directory: vagrant_up_custom
#
# Look for a custom trigger file. If this exists, we'll assume that
# all trigger actions should be handled by this custom script. If
# it does not exist, then we'll handle some basic tasks.
if [[ -f /home/vagrant/bin/vagrant_up_custom ]]; then
	vagrant_up_custom
fi

printf "Importing new database backups. Run provision to also overwrite the existing.\n"
cd /srv/database/backups/
# Parse through each file in the directory and use the file name to import the SQL file into the database of the same name
sql_count=`ls -1 *.sql 2>/dev/null | wc -l`
if [ $sql_count != 0 ]
then
	for file in $( ls *.sql )
	do
	pre_dot=${file%%.sql}
	mysql_cmd='SHOW TABLES FROM `'$pre_dot'`' # Required to support hypens in database names
	db_exist=`mysql -u root -proot --skip-column-names -e "$mysql_cmd"`

	# Create DB if it doesn't exist yet
	if [ "$?" != "0" ]
	then
		printf "  * Creating $pre_dot with admin/admin credentials.\n"
		mysql -u root -proot -e "CREATE DATABASE IF NOT EXISTS $pre_dot"
		mysql -u root -proot -e "GRANT ALL PRIVILEGES ON $pre_dot.* TO admin@localhost IDENTIFIED BY 'admin'"
	fi

	# Import .sql
	if [ "" == "$db_exist" ]
	then
		mysql -u root -proot $pre_dot < $pre_dot.sql
		printf "  * Imported $pre_dot.sql\n"
	fi

	done
else
	printf "No databases found\n"
fi
